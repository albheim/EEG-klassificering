data dir
/lunarc/nobackup/users/albheim/EEG-klassificering/DATA
script
#!/bin/sh
#SBATCH -t 10:00:00
#SBATCH -J lstm_eeg
#SBATCH -A lu2018-2-3
#// SBATCH -o stdout_%j.out
#// SBATCH -e stderr_%j.err

# shold be lu or gpu
#SBATCH -p gpu

# how many gpus, 4 per node, using many seems to crash more often so stick with 1
#SBATCH --gres=gpu:1

#SBATCH --mem-per-cpu=3100

DATA_DIR="$(cat ../data_location.txt)"
echo "data dir"
echo $DATA_DIR

echo "script"
cat $0

PY_FILE="test.py"
echo "py file"
cat $PY_FILE

echo "nvidia smi"
nvidia-smi

echo "start time"
date

cp -r $DATA_DIR $SNIC_TMP
ls $SNIC_TMP
du -h "${SNIC_TMP}/DATA"

echo "copy done time"
date

python $PY_FILE $SNIC_TMP

echo "end time"
date
py file
import sys
from datetime import datetime

import numpy as np
from scipy import io

import tensorflow as tf

from keras.models import Sequential
from keras.layers import Dense, Dropout, Input
from keras.layers import TimeDistributed
from keras.layers import SimpleRNN, RNN, LSTM, GRU

from keras.optimizers import SGD, Adam, RMSprop, Nadam
from keras import backend as K

from tensorflow.python.client import device_lib
print("here comes devices list")
print(device_lib.list_local_devices())
print("finished with device list")
print(str(datetime.now()))

import models
import data
import util


x, y = data.load_single(cut=False)

splits = 5
n_subs = len(x)
n_mod = 5


for _ in range(n_mod):
    first_layer_nodes = np.random.randint(10, 60)
    second_layer_nodes = np.random.randint(5, 30)
    dropout_prob = np.random.ranf() * 0.75
    model = models.lstm_lstm(x[0][0].shape,
                             first_layer_nodes,
                             second_layer_nodes,
                             dropout_prob)

    model.summary()
    print("first {}, second {}, dropout {}".format(first_layer_nodes,
                                                   second_layer_nodes,
                                                   dropout_prob))
    w_save = model.get_weights()
    avgacc = 0
    for i in range(n_subs):
        n = x[i].shape[0]
        acc = 0
        for tr, val in util.kfold(n, splits):
            # reset to initial weights
            model.set_weights(w_save)

            # fit with next kfold data
            model.fit(x[i][tr], y[i][tr],
                      batch_size=64, epochs=50, verbose=0)

            loss, accuracy = model.evaluate(x[i][val], y[i][val], verbose=0)
            acc += accuracy

        acc /= splits
        avgacc += acc

        print("subject {}, avg accuracy {} over {} splits".format(i + 1 if i + 1 < 10 else i + 2, acc, splits))

    avgacc /= n_subs
    print("avg accuracy over all subjects {}".format(avgacc))


nvidia smi
Mon Feb 19 09:08:35 2018       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 384.81                 Driver Version: 384.81                    |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  Tesla K80           On   | 00000000:04:00.0 Off |                    0 |
| N/A   24C    P8    27W / 149W |      1MiB / 11439MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
|   1  Tesla K80           On   | 00000000:05:00.0 Off |                    0 |
| N/A   30C    P8    31W / 149W |      1MiB / 11439MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
|   2  Tesla K80           On   | 00000000:84:00.0 Off |                    0 |
| N/A   23C    P8    25W / 149W |      1MiB / 11439MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
|   3  Tesla K80           On   | 00000000:85:00.0 Off |                    0 |
| N/A   30C    P8    29W / 149W |      1MiB / 11439MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
start time
Mon Feb 19 09:08:35 CET 2018
DATA
2.4G	/local/slurmtmp.469963/DATA/Visual
2.4G	/local/slurmtmp.469963/DATA/Verbal
4.7G	/local/slurmtmp.469963/DATA
copy done time
Mon Feb 19 09:09:01 CET 2018
2018-02-19 09:09:02.752835: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA
2018-02-19 09:09:02.852795: E tensorflow/stream_executor/cuda/cuda_driver.cc:406] failed call to cuInit: CUDA_ERROR_NOT_INITIALIZED
2018-02-19 09:09:02.852922: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:158] retrieving CUDA diagnostic information for host: ag05
2018-02-19 09:09:02.852964: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:165] hostname: ag05
2018-02-19 09:09:02.853048: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] libcuda reported version is: 384.81.0
2018-02-19 09:09:02.853099: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:369] driver version file contents: """NVRM version: NVIDIA UNIX x86_64 Kernel Module  384.81  Sat Sep  2 02:43:11 PDT 2017
GCC version:  gcc version 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC) 
"""
2018-02-19 09:09:02.853146: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:193] kernel reported version is: 384.81.0
2018-02-19 09:09:02.853175: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:300] kernel version seems to match DSO: 384.81.0
/home/albheim/.conda/envs/keras-gpu/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
Using TensorFlow backend.
here comes devices list
[name: "/device:CPU:0"
device_type: "CPU"
memory_limit: 268435456
locality {
}
incarnation: 6584435995318524842
]
finished with device list
2018-02-19 09:09:02.853346
loading  Subj01_CleanData_study_FA
loading  Subj01_CleanData_study_LM
loading  Subj01_CleanData_study_OB
loading  Subj02_CleanData_study_FA
loading  Subj02_CleanData_study_LM
loading  Subj02_CleanData_study_OB
loading  Subj03_CleanData_study_FA
loading  Subj03_CleanData_study_LM
loading  Subj03_CleanData_study_OB
loading  Subj04_CleanData_study_FA
loading  Subj04_CleanData_study_LM
loading  Subj04_CleanData_study_OB
loading  Subj05_CleanData_study_FA
loading  Subj05_CleanData_study_LM
loading  Subj05_CleanData_study_OB
loading  Subj06_CleanData_study_FA
loading  Subj06_CleanData_study_LM
loading  Subj06_CleanData_study_OB
loading  Subj07_CleanData_study_FA
loading  Subj07_CleanData_study_LM
loading  Subj07_CleanData_study_OB
loading  Subj08_CleanData_study_FA
loading  Subj08_CleanData_study_LM
loading  Subj08_CleanData_study_OB
loading  Subj09_CleanData_study_FA
loading  Subj09_CleanData_study_LM
loading  Subj09_CleanData_study_OB
loading  Subj11_CleanData_study_FA
loading  Subj11_CleanData_study_LM
loading  Subj11_CleanData_study_OB
loading  Subj12_CleanData_study_FA
loading  Subj12_CleanData_study_LM
loading  Subj12_CleanData_study_OB
loading  Subj13_CleanData_study_FA
loading  Subj13_CleanData_study_LM
loading  Subj13_CleanData_study_OB
loading  Subj14_CleanData_study_FA
loading  Subj14_CleanData_study_LM
loading  Subj14_CleanData_study_OB
loading  Subj15_CleanData_study_FA
loading  Subj15_CleanData_study_LM
loading  Subj15_CleanData_study_OB
loading  Subj16_CleanData_study_FA
loading  Subj16_CleanData_study_LM
loading  Subj16_CleanData_study_OB
loading  Subj17_CleanData_study_FA
loading  Subj17_CleanData_study_LM
loading  Subj17_CleanData_study_OB
loading  Subj18_CleanData_study_FA
loading  Subj18_CleanData_study_LM
loading  Subj18_CleanData_study_OB
loading  Subj19_CleanData_study_FA
loading  Subj19_CleanData_study_LM
loading  Subj19_CleanData_study_OB
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
lstm_1 (LSTM)                (None, 31, 43)            359996    
_________________________________________________________________
dropout_1 (Dropout)          (None, 31, 43)            0         
_________________________________________________________________
lstm_2 (LSTM)                (None, 22)                5808      
_________________________________________________________________
dense_1 (Dense)              (None, 3)                 69        
=================================================================
Total params: 365,873
Trainable params: 365,873
Non-trainable params: 0
_________________________________________________________________
first 43, second 22, dropout 0.5719976574543266
subject 1, avg accuracy 0.4054054066136077 over 5 splits
subject 2, avg accuracy 0.353342817217154 over 5 splits
subject 3, avg accuracy 0.4779516379236327 over 5 splits
subject 4, avg accuracy 0.443243244209805 over 5 splits
subject 5, avg accuracy 0.5553342823114029 over 5 splits
subject 6, avg accuracy 0.44564564725658196 over 5 splits
subject 7, avg accuracy 0.40398293124408513 over 5 splits
subject 8, avg accuracy 0.4684210531021419 over 5 splits
subject 9, avg accuracy 0.35547653028839515 over 5 splits
subject 11, avg accuracy 0.4504504512559186 over 5 splits
subject 12, avg accuracy 0.3315789489369643 over 5 splits
subject 13, avg accuracy 0.3297297305987875 over 5 splits
subject 14, avg accuracy 0.43468286130029343 over 5 splits
subject 15, avg accuracy 0.4635135138357008 over 5 splits
subject 16, avg accuracy 0.4944669384061888 over 5 splits
subject 17, avg accuracy 0.5947368421052631 over 5 splits
subject 18, avg accuracy 0.5027027047969199 over 5 splits
subject 19, avg accuracy 0.43753753769863113 over 5 splits
avg accuracy over all subjects 0.44156683772785965
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
lstm_3 (LSTM)                (None, 31, 19)            157244    
_________________________________________________________________
dropout_2 (Dropout)          (None, 31, 19)            0         
_________________________________________________________________
lstm_4 (LSTM)                (None, 18)                2736      
_________________________________________________________________
dense_2 (Dense)              (None, 3)                 57        
=================================================================
Total params: 160,037
Trainable params: 160,037
Non-trainable params: 0
_________________________________________________________________
first 19, second 18, dropout 0.39102632094529255
subject 1, avg accuracy 0.4486486494541168 over 5 splits
subject 2, avg accuracy 0.38563300237207965 over 5 splits
subject 3, avg accuracy 0.4731152220776207 over 5 splits
subject 4, avg accuracy 0.3351351368266183 over 5 splits
subject 5, avg accuracy 0.4284495028459161 over 5 splits
subject 6, avg accuracy 0.41801801946786077 over 5 splits
subject 7, avg accuracy 0.3982930310547436 over 5 splits
subject 8, avg accuracy 0.42105263252007336 over 5 splits
subject 9, avg accuracy 0.3500711243954695 over 5 splits
subject 11, avg accuracy 0.40675675699839714 over 5 splits
subject 12, avg accuracy 0.3421052640990207 over 5 splits
subject 13, avg accuracy 0.37226173708567745 over 5 splits
subject 14, avg accuracy 0.3977058045133727 over 5 splits
subject 15, avg accuracy 0.46381381445818837 over 5 splits
subject 16, avg accuracy 0.43724696510314304 over 5 splits
subject 17, avg accuracy 0.589473684524235 over 5 splits
subject 18, avg accuracy 0.4594594602649277 over 5 splits
subject 19, avg accuracy 0.4139639641250576 over 5 splits
avg accuracy over all subjects 0.41895576512147326
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
lstm_5 (LSTM)                (None, 31, 14)            115584    
_________________________________________________________________
dropout_3 (Dropout)          (None, 31, 14)            0         
_________________________________________________________________
lstm_6 (LSTM)                (None, 18)                2376      
_________________________________________________________________
dense_3 (Dense)              (None, 3)                 57        
=================================================================
Total params: 118,017
Trainable params: 118,017
Non-trainable params: 0
_________________________________________________________________
first 14, second 18, dropout 0.3811389757809347
subject 1, avg accuracy 0.416216217182778 over 5 splits
subject 2, avg accuracy 0.40142247710339884 over 5 splits
subject 3, avg accuracy 0.44068278925093274 over 5 splits
subject 4, avg accuracy 0.43243243339899423 over 5 splits
subject 5, avg accuracy 0.42190611713895765 over 5 splits
subject 6, avg accuracy 0.4348348363652244 over 5 splits
subject 7, avg accuracy 0.45761024198610106 over 5 splits
subject 8, avg accuracy 0.40000000219596055 over 5 splits
subject 9, avg accuracy 0.4308677111758955 over 5 splits
subject 11, avg accuracy 0.4450450458505132 over 5 splits
subject 12, avg accuracy 0.3789473703033046 over 5 splits
subject 13, avg accuracy 0.382361309478327 over 5 splits
subject 14, avg accuracy 0.40863697846569674 over 5 splits
subject 15, avg accuracy 0.46981981990036664 over 5 splits
subject 16, avg accuracy 0.47435897442734676 over 5 splits
subject 17, avg accuracy 0.589473685465361 over 5 splits
subject 18, avg accuracy 0.49189189382501547 over 5 splits
subject 19, avg accuracy 0.4306306307917243 over 5 splits
avg accuracy over all subjects 0.4392854741281055
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
lstm_7 (LSTM)                (None, 31, 59)            497724    
_________________________________________________________________
dropout_4 (Dropout)          (None, 31, 59)            0         
_________________________________________________________________
lstm_8 (LSTM)                (None, 21)                6804      
_________________________________________________________________
dense_4 (Dense)              (None, 3)                 66        
=================================================================
Total params: 504,594
Trainable params: 504,594
Non-trainable params: 0
_________________________________________________________________
first 59, second 21, dropout 0.48994248128187246
subject 1, avg accuracy 0.427027028396323 over 5 splits
subject 2, avg accuracy 0.42247510740631505 over 5 splits
subject 3, avg accuracy 0.5103840701144248 over 5 splits
subject 4, avg accuracy 0.42162162307146434 over 5 splits
subject 5, avg accuracy 0.49160739846453394 over 5 splits
subject 6, avg accuracy 0.5600600613488091 over 5 splits
subject 7, avg accuracy 0.4729729736894157 over 5 splits
subject 8, avg accuracy 0.41052631704430836 over 5 splits
subject 9, avg accuracy 0.4573257478423004 over 5 splits
subject 11, avg accuracy 0.42792792921667705 over 5 splits
subject 12, avg accuracy 0.3157894749390452 over 5 splits
subject 13, avg accuracy 0.33001422555229576 over 5 splits
subject 14, avg accuracy 0.4558704461243793 over 5 splits
subject 15, avg accuracy 0.430480481124855 over 5 splits
subject 16, avg accuracy 0.4214574914189324 over 5 splits
subject 17, avg accuracy 0.578947367166218 over 5 splits
subject 18, avg accuracy 0.4216216232325579 over 5 splits
subject 19, avg accuracy 0.35375375375375373 over 5 splits
avg accuracy over all subjects 0.4394368399948116
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
lstm_9 (LSTM)                (None, 31, 50)            420000    
_________________________________________________________________
dropout_5 (Dropout)          (None, 31, 50)            0         
_________________________________________________________________
lstm_10 (LSTM)               (None, 20)                5680      
_________________________________________________________________
dense_5 (Dense)              (None, 3)                 63        
=================================================================
Total params: 425,743
Trainable params: 425,743
Non-trainable params: 0
_________________________________________________________________
first 50, second 20, dropout 0.34074419388385313
subject 1, avg accuracy 0.4054054060497799 over 5 splits
subject 2, avg accuracy 0.41237553437776964 over 5 splits
subject 3, avg accuracy 0.5108108132102581 over 5 splits
subject 4, avg accuracy 0.43243243307680695 over 5 splits
subject 5, avg accuracy 0.41109530631542884 over 5 splits
subject 6, avg accuracy 0.48393393554487024 over 5 splits
subject 7, avg accuracy 0.49416785238477623 over 5 splits
subject 8, avg accuracy 0.47368421240856773 over 5 splits
subject 9, avg accuracy 0.3763869137886069 over 5 splits
subject 11, avg accuracy 0.43948949045605123 over 5 splits
subject 12, avg accuracy 0.3947368425758261 over 5 splits
subject 13, avg accuracy 0.3510668571312431 over 5 splits
subject 14, avg accuracy 0.4089068827358817 over 5 splits
subject 15, avg accuracy 0.4258258264702003 over 5 splits
subject 16, avg accuracy 0.4373819185091577 over 5 splits
subject 17, avg accuracy 0.5842105272569154 over 5 splits
subject 18, avg accuracy 0.4324324336406347 over 5 splits
subject 19, avg accuracy 0.40300300308354975 over 5 splits
avg accuracy over all subjects 0.4376303438342402
end time
Mon Feb 19 14:06:03 CET 2018
slurmstepd: error: Exceeded step memory limit at some point.
